---
import PageLayout from '@/layouts/PageLayout.astro'
import { getAllEpisodes, whiteSpaceToUnderscore } from '@/helpers'

interface Props {
  episodes: any[],
  tag: string
}

export async function getStaticPaths() {
  const allEpisodes = await getAllEpisodes({ sortBy: 'oldest' })
  const tagToEpisodesMap: any = {}

  for (const episode of allEpisodes) {
    for (const tag of episode.frontmatter.tags) {
      if (!tagToEpisodesMap[tag]) {
        tagToEpisodesMap[tag] = []
      }
      tagToEpisodesMap[tag].push(episode)
    }
  }

  const paths = Object.entries(tagToEpisodesMap).map(([tag, episodes]) => ({
    params: { tag: whiteSpaceToUnderscore(tag) },
    props: { episodes, tag }
  }))

  return paths
}

const { episodes, tag } = Astro.props
const pageTitle = `Tag | ${tag}`

---

<PageLayout pageType="episode" pageTitle={pageTitle}>
  <div class="c-page-container">
    <h2 class="c-page-title">
      <span>Episode(s) tagged with:</span>
      <span class="c-title-tag-name">{tag}</span>
    </h2>

    <hr class="section-divider c-divider" />

    <ul class="c-ep-card-container">
      {
        episodes.map((ep: any) => <li><a href={ep.frontmatter.permalink}>{ep.frontmatter.title}</a></li>)
      }
    </ul>
  </div>
</PageLayout>

<style lang="scss">
@use "@/styles/variables" as *;

.c-page-container {
  position: relative;
  width: 100%;
  margin-top: 4rem;
}

.c-page-title {
  font-size: $font-heading-5;

  .c-title-tag-name {
    display: inline-block;
    font-size: 0.85em;
    padding: 0.125em 0.625em;
    border-radius: 5rem;
    background-color: $grey_3;
    color: $dark_navy;
    line-height: 1.25;
    transform: translateY(-0.125em);
  }

  @include from($tablet) {
    font-size: $font-heading-4;
  }
}

.c-divider {
  margin-top: 2rem;
  margin-bottom: 4rem;
}
</style>
